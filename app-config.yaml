app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: Talentica Software

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
    #workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      token: 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

proxy:
  endpoints:
    '/WeatherForecast':
      target: 'http://localhost:7008/api/weather'
      changeOrigin: true   
    '/PublicWeatherForecast':
      target: 'http://localhost:7008/api/weather'
      changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    guest: {}
    github:
      development:
        clientId: Ov23liOWIYzez36krjCn
        clientSecret: 1deb6be944f18aa350598c7e5907d14bf9082ac2
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName

scaffolder:
  processors:
    github:
      privateToken: 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
  actions:
    publish:
      github:
        allowedHosts:
          - github.com

#scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../api/*/*.yaml
      rules:
        - allow: [Resource, API, Group]

    # Local example template
    - type: file
      target: ../../examples/template/*.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../TemplateExample/catalog-info.yaml
      rules:
        - allow: [Component]
    
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

permission:
  # setting this to `false` will disable permissions
  enabled: true
